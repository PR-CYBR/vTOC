name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_PREFIX: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: frontend/pnpm-lock.yaml
      - name: Enable corepack
        run: corepack enable
      - name: Install frontend dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile
      - name: Frontend tests
        working-directory: frontend
        run: |
          CI=1 pnpm test -- --watch=false --passWithNoTests
          pnpm build
      - name: Install Playwright browsers
        working-directory: frontend
        run: pnpm exec playwright install --with-deps
      - name: Playwright smoke tests
        working-directory: frontend
        run: pnpm test:playwright -- --reporter=line
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install backend dependencies
        working-directory: backend
        run: pip install -r requirements.txt
      - name: Backend tests
        working-directory: backend
        run: pytest -q
      - name: Build backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/backend:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/backend:latest
      - name: Build frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/frontend:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/frontend:latest
      - name: Build scraper image
        uses: docker/build-push-action@v6
        with:
          context: ./agents/scraper
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/scraper:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/scraper:latest
      - name: Smoke test backend
        run: |
          docker run -d --rm -e DATABASE_URL=sqlite:/// -p 8080:8080 --name vtoc-backend-test \
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/backend:${{ github.sha }}
          sleep 5
          curl -f http://localhost:8080/healthz
          curl -f http://localhost:8080/api/v1/agent-actions/audits
        shell: bash
      - name: Cleanup smoke container
        if: always()
        run: docker rm -f vtoc-backend-test || true
